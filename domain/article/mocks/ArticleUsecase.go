// Code generated by mockery 2.9.0. DO NOT EDIT.

package mocks

import (
	context "context"

	article "github.com/madeindra/devoria-workshop-to-challenge/domain/article"

	mock "github.com/stretchr/testify/mock"

	response "github.com/madeindra/devoria-workshop-to-challenge/internal/response"
)

// ArticleUsecase is an autogenerated mock type for the ArticleUsecase type
type ArticleUsecase struct {
	mock.Mock
}

// CreateArticle provides a mock function with given fields: ctx, params
func (_m *ArticleUsecase) CreateArticle(ctx context.Context, params article.CreateArticleRequest) response.Response {
	ret := _m.Called(ctx, params)

	var r0 response.Response
	if rf, ok := ret.Get(0).(func(context.Context, article.CreateArticleRequest) response.Response); ok {
		r0 = rf(ctx, params)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(response.Response)
		}
	}

	return r0
}

// GetAllArticles provides a mock function with given fields: ctx
func (_m *ArticleUsecase) GetAllArticles(ctx context.Context) response.Response {
	ret := _m.Called(ctx)

	var r0 response.Response
	if rf, ok := ret.Get(0).(func(context.Context) response.Response); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(response.Response)
		}
	}

	return r0
}

// GetOneArticle provides a mock function with given fields: ctx, ID
func (_m *ArticleUsecase) GetOneArticle(ctx context.Context, ID int64) response.Response {
	ret := _m.Called(ctx, ID)

	var r0 response.Response
	if rf, ok := ret.Get(0).(func(context.Context, int64) response.Response); ok {
		r0 = rf(ctx, ID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(response.Response)
		}
	}

	return r0
}

// UpdateArticle provides a mock function with given fields: ctx, params
func (_m *ArticleUsecase) UpdateArticle(ctx context.Context, params article.UpdateArticleRequest) response.Response {
	ret := _m.Called(ctx, params)

	var r0 response.Response
	if rf, ok := ret.Get(0).(func(context.Context, article.UpdateArticleRequest) response.Response); ok {
		r0 = rf(ctx, params)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(response.Response)
		}
	}

	return r0
}
